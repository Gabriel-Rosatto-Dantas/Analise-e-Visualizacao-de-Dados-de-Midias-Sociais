"""
Exemplo de uso do Sistema de An√°lise de Dados de M√≠dias Sociais
"""

import pandas as pd
import sys
import os

# Adicionar src ao path para importa√ß√µes
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from src.generators.data_generator import SocialMediaDataGenerator
from src.analyzers.kpi_analyzer import KPIAnalyzer
from src.visualizers.visualizations import SocialMediaVisualizer
from src.analyzers.insights_generator import InsightsGenerator
from pipeline.report_generator import ReportGenerator

def exemplo_completo():
    """Exemplo completo de uso do sistema"""
    print("üöÄ EXEMPLO DE USO DO SISTEMA DE AN√ÅLISE DE DADOS DE M√çDIAS SOCIAIS")
    print("=" * 70)
    
    # 1. Gerar dados simulados
    print("\n1Ô∏è‚É£ Gerando dados simulados...")
    generator = SocialMediaDataGenerator()
    platform_data, demographic_data, campaign_data = generator.generate_all_data()
    
    print(f"‚úÖ Dados gerados:")
    print(f"   - M√©tricas das plataformas: {len(platform_data)} registros")
    print(f"   - Dados demogr√°ficos: {len(demographic_data)} registros")
    print(f"   - Dados de campanhas: {len(campaign_data)} registros")
    
    # 2. An√°lise de KPIs
    print("\n2Ô∏è‚É£ Executando an√°lise de KPIs...")
    analyzer = KPIAnalyzer(platform_data, demographic_data, campaign_data)
    kpi_summary = analyzer.generate_kpi_summary()
    trends = analyzer.identify_trends()
    
    print("\nüìä RESUMO DOS KPIs:")
    for platform, metrics in kpi_summary.items():
        print(f"\n{platform}:")
        print(f"  Seguidores: {metrics['total_followers']:,}")
        print(f"  Taxa de Crescimento: {metrics['followers_growth_rate']:.2f}%")
        print(f"  Taxa de Engajamento: {metrics['avg_engagement_rate']:.2f}%")
    
    # 3. Gerar visualiza√ß√µes
    print("\n3Ô∏è‚É£ Criando visualiza√ß√µes...")
    visualizer = SocialMediaVisualizer(platform_data, demographic_data, campaign_data)
    visualizer.save_all_visualizations()
    print("‚úÖ Visualiza√ß√µes salvas na pasta 'visualizations/'")
    
    # 4. Gerar insights autom√°ticos
    print("\n4Ô∏è‚É£ Gerando insights autom√°ticos...")
    insights_generator = InsightsGenerator(platform_data, demographic_data, campaign_data)
    insights = insights_generator.generate_all_insights()
    
    print(f"\nüí° INSIGHTS GERADOS ({len(insights)} insights):")
    for i, insight in enumerate(insights[:5], 1):  # Mostrar apenas os 5 primeiros
        print(f"\n{i}. [{insight['tipo']}] {insight['titulo']}")
        print(f"   {insight['descricao']}")
        print(f"   Recomenda√ß√£o: {insight['recomendacao']}")
        print(f"   Prioridade: {insight['prioridade']}")
    
    # 5. Gerar relat√≥rio PDF
    print("\n5Ô∏è‚É£ Gerando relat√≥rio PDF...")
    report_generator = ReportGenerator(platform_data, demographic_data, campaign_data, insights_generator)
    filename = "exemplo_relatorio_marketing.pdf"
    report_generator.generate_report(filename)
    print(f"‚úÖ Relat√≥rio salvo como: {filename}")
    
    # 6. Resumo final
    print("\nüéØ RESUMO DO EXEMPLO:")
    print("‚úÖ Dados simulados gerados")
    print("‚úÖ An√°lise de KPIs executada")
    print("‚úÖ Visualiza√ß√µes criadas")
    print("‚úÖ Insights autom√°ticos gerados")
    print("‚úÖ Relat√≥rio PDF criado")
    
    print("\nüìÅ ARQUIVOS GERADOS:")
    print("   - data/platform_metrics.csv")
    print("   - data/demographic_data.csv")
    print("   - data/campaign_data.csv")
    print("   - visualizations/ (pasta com gr√°ficos)")
    print(f"   - {filename}")
    
    print("\nüöÄ Para usar o dashboard interativo, execute:")
    print("   python dashboard.py")
    
    print("\nüìñ Para mais informa√ß√µes, consulte o README.md")

def exemplo_analise_rapida():
    """Exemplo de an√°lise r√°pida"""
    print("\n‚ö° EXEMPLO DE AN√ÅLISE R√ÅPIDA")
    print("=" * 40)
    
    # Carregar dados existentes
    platform_data = pd.read_csv('data/platform_metrics.csv')
    demographic_data = pd.read_csv('data/demographic_data.csv')
    campaign_data = pd.read_csv('data/campaign_data.csv')
    
    # An√°lise r√°pida de engajamento
    print("\nüìà An√°lise de Engajamento por Plataforma:")
    engagement_by_platform = platform_data.groupby('platform').agg({
        'engagement': 'sum',
        'reach': 'sum',
        'followers': 'last'
    })
    
    engagement_by_platform['engagement_rate'] = (engagement_by_platform['engagement'] / engagement_by_platform['reach']) * 100
    
    for platform, data in engagement_by_platform.iterrows():
        print(f"\n{platform}:")
        print(f"  Seguidores: {data['followers']:,}")
        print(f"  Engajamento Total: {data['engagement']:,}")
        print(f"  Taxa de Engajamento: {data['engagement_rate']:.2f}%")
    
    # Top interesses
    print("\nüéØ Top 5 Interesses por Engajamento:")
    top_interests = demographic_data.groupby('interest')['engagement_rate'].mean().sort_values(ascending=False).head(5)
    for interest, rate in top_interests.items():
        print(f"  ‚Ä¢ {interest}: {rate:.2f}%")
    
    # ROI das campanhas
    print("\nüí∞ ROI M√©dio por Tipo de Campanha:")
    roi_by_type = campaign_data.groupby('campaign_type')['roi'].mean().sort_values(ascending=False)
    for campaign_type, roi in roi_by_type.items():
        print(f"  ‚Ä¢ {campaign_type}: {roi:.2f}")

if __name__ == "__main__":
    # Executar exemplo completo
    exemplo_completo()
    
    # Executar an√°lise r√°pida
    exemplo_analise_rapida()
    
    print("\nüéâ Exemplo conclu√≠do com sucesso!")
    print("Para executar o sistema completo, use: python main.py")
